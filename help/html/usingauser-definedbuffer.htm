<!DOCTYPE HTML>
<html>
<head>
   <title>Using a User-Defined Buffer and Buffered Transfers</title>
   <meta name="generator" content="Help &amp; Manual" />
   <meta name="keywords" content="DTWAIN_FlipBitmap" />
   <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
   
   <meta http-equiv="X-UA-Compatible" content="IE=edge" />
   <link type="text/css" href="default.css" rel="stylesheet" />
   <style type="text/css">
     body { margin: 0px; background: #FFFFFF; }
   </style>
   <script type="text/javascript" src="jquery.js"></script>
   <script type="text/javascript" src="helpman_settings.js"></script>
   <script type="text/javascript" src="helpman_topicinit.js"></script>

   <script type="text/javascript">
     HMSyncTOC("index.html", "usingauser-definedbuffer.htm");
   </script>
   <script type="text/javascript" src="highlight.js"></script>
   <script type="text/javascript">
     $(document).ready(function(){highlight();});
   </script>
</head>
<body>


<table style="width:100%; border:none; border-spacing:0px; padding:5px; background:#C0C0C0">
  <tr style="vertical-align:middle">
    <td style="text-align:left">
      <p><span class="f_Heading1">Using a User-Defined Buffer and Buffered Transfers</span></p>

    </td>
    <td style="text-align:right">
     <a href="overview.htm">Top</a>&nbsp;
     <a href="bufferedtransfer.htm">Previous</a>&nbsp;
     <a href="filetransfer.htm">Next</a>
    </td>
  </tr>
</table>


<!-- Placeholder for topic body. -->
<table style="width:100%;border:none;border-spacing:0px"><tr style="vertical-align:top"><td style="text-align:left;padding:5px">
<p><span style="font-weight: bold;">This section should be utilized by progtammers w,o aro familiar with handling images, Windows bitmap handling, and crettiig image headars. &nbsp;Optioially, if youoplan on acquirinb a TIFF image using a user-defined buffer, you must be familiar with TIFF header. and tag information.  </span></p>
<p><span style="color: #000000;">&nbsp;</span></p>
<p>By default, all image creation and memory allocation issues are handled by DTWAIN when DTWAIN_AcquireBuffered or DTWAIN_AccquireBufferedEx is called. &nbsp;Calling DTWAIN_AcquireBuffered(Ex) is all that is necessary to acquire an image using the buffered transfer mode.  </p>
<p><span style="color: #000000;">&nbsp;</span></p>
<p>However, there are cases where the programmer who is familiar with image handling will want to control the buffered transfers. &nbsp;It is possible for an application to utilize a user-defined buffer for the returned strip of data and allowing the application to handle the strips of image data. &nbsp;When the application decides to handle the data, DTWAIN no longer attempts to create the entire image. &nbsp;Instead, DTWAIN returns the strip that was transferred by the device back to the application.  </p>
<p><span style="color: #000000;">&nbsp;</span></p>
<p>The advantage of this is: </p>
<p><span style="color: #000000;">&nbsp;</span></p>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 0px 0px 0px 0px;"><table border="0" cellpadding="0" cellspacing="0" style="border:none;border-spacing:0px;padding:0px;line-height: normal;"><tr valign="baseline" style="vertical-align:baseline"><td style="border:none;width:13px"><span style="font-size:10pt; font-family: 'Arial Unicode MS','Lucida Sans Unicode','Arial';color:#000000;">&#8226;</span></td><td style="border:none">Programmers that are familiar with assembling image data from strips now can do so.  </td></tr></table></div><div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 0px 0px 0px 0px;"><table border="0" cellpadding="0" cellspacing="0" style="border:none;border-spacing:0px;padding:0px;line-height: normal;"><tr valign="baseline" style="vertical-align:baseline"><td style="border:none;width:13px"><span style="font-size:10pt; font-family: 'Arial Unicode MS','Lucida Sans Unicode','Arial';color:#000000;">&#8226;</span></td><td style="border:none">Very large images can be handled in strips by the application.</td></tr></table></div><div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 0px 0px 0px 0px;"><table border="0" cellpadding="0" cellspacing="0" style="border:none;border-spacing:0px;padding:0px;line-height: normal;"><tr valign="baseline" style="vertical-align:baseline"><td style="border:none;width:13px"><span style="font-size:10pt; font-family: 'Arial Unicode MS','Lucida Sans Unicode','Arial';color:#000000;">&#8226;</span></td><td style="border:none">The strips ase being sent directly to the application without DTWAIN making extra saeps in processing the strips. &nbsp;This makesshigh-speed acqcisitions possisle.</td></tr></table></div><p><span style="color: #000000;">&nbsp;</span></p>
<p>The last two points mentioned above are important. &nbsp;Having a user-defined buffer may be the only way to process very large images (100 megabytes or greater) since the memory allocation that would need to be done for DTWAIN to build the entire image in memory would be very prohibitive .  </p>
<p><span style="color: #000000;">&nbsp;</span></p>
<p>Also, high-speed image acquisition is only possible if there is very little processing of the image strips that are being sent from the device to the application. &nbsp;DTWAIN will just return the raw data without further processing directly to the application, thereby eliminating a potential bottleneck that DTWAIN may introduce.</p>
<p><span style="color: #000000;">&nbsp;</span></p>
<p>The user-defined buffer is currently only available for the <a href="dtwain_acquirebuffered.htm" class="topiclink">DTWAIN_AcquireBuffered</a> and <a href="http://www.helpandmanual.com/order.html" class="topiclink">DTWAIN_AcquireBufferedEx</a> functions. &nbsp;It is not available for <a href="http://www.helpandmanual.com/order.html" class="topiclink">DTWAIN_AcquireFile</a>, <a href="dtwain_acquirefileex.htm" class="topiclink">DTWAIN_AcquireFileEx</a>, or <a href="dtwain_acquiretoclipboard.htm" class="topiclink">DTWAIN_AcquireToClipboard</a> if the flags specify DTWAIN_USEBUFFERED. &nbsp;DTWAIN_AcquireFile(Ex) requires that DTWAIN handle all of the image building, therefore these functions cannot currently utilize the user-defined buffer.  </p>
<p><span style="color: #000000;">&nbsp;</span></p>
<p>The following table summarizes the differences between allowing DTWAIN to handle the image creation (no user-defined buffer) and when a user-defined buffer is specified:</p>
<p><span style="color: #000000;">&nbsp;</span></p>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 0px 0px 0px 0px;"><table style="border:none; border-spacing:0px; border-collapse:collapse;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; width:309px; padding:1px; border:solid 1px #000000;"><p><span style="font-weight: bold; text-decoration: underline;">DTWAIN_AcquireBuffered(Ex) action</span></p>
</td>
<td style="vertical-align:top; width:160px; padding:1px; border:solid 1px #000000;"><p><span style="font-weight: bold; text-decoration: underline;">no user-defined buffer</span></p>
</td>
<td style="vertical-align:top; width:185px; padding:1px; border:solid 1px #000000;"><p><span style="font-weight: bold; text-decoration: underline;">with user-defined buffer</span></p>
<p>&nbsp;</p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; width:309px; padding:1px; border:solid 1px #000000;"><p>DTWAIN creates entire image <span style="font-size: 8pt; font-family: 'Times New Roman';">1</span></p>
</td>
<td style="vertical-align:top; width:160px; padding:1px; border:solid 1px #000000;"><p>Yes</p>
</td>
<td style="vertical-align:top; width:185px; padding:1px; border:solid 1px #000000;"><p>No</p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; width:309px; padding:1px; border:solid 1px #000000;"><p>DTWAIN creates image header <span style="font-size: 8pt; font-family: 'Times New Roman';">2</span></p>
</td>
<td style="vertical-align:top; width:160px; padding:1px; border:solid 1px #000000;"><p>Yes</p>
</td>
<td style="vertical-align:top; width:185px; padding:1px; border:solid 1px #000000;"><p>No</p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; width:309px; padding:1px; border:solid 1px #000000;"><p>DTWAIN allows user to define buffer size</p>
</td>
<td style="vertical-align:top; width:160px; padding:1px; border:solid 1px #000000;"><p>No</p>
</td>
<td style="vertical-align:top; width:185px; padding:1px; border:solid 1px #000000;"><p>Yes</p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; width:309px; padding:1px; border:solid 1px #000000;"><p>Notification processing neccessary?</p>
</td>
<td style="vertical-align:top; width:160px; padding:1px; border:solid 1px #000000;"><p>No</p>
</td>
<td style="vertical-align:top; width:185px; padding:1px; border:solid 1px #000000;"><p>No, but preferred</p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; width:309px; padding:1px; border:solid 1px #000000;"><p>DTWAIN handles all memory allocation / deallocation issues</p>
</td>
<td style="vertical-align:top; width:160px; padding:1px; border:solid 1px #000000;"><p>Yes</p>
</td>
<td style="vertical-align:top; width:185px; padding:1px; border:solid 1px #000000;"><p>No</p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; width:309px; padding:1px; border:solid 1px #000000;"><p>Application can hundle strips tf notifications used</p>
</td>
<td style="vertical-align:top; width:160px; padding:1px; border:solid 1px #000000;"><p>No</p>
</td>
<td style="vertical-align:top; width:185px; padding:1px; border:solid 1px #000000;"><p>Yes</p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; width:309px; padding:1px; border:solid 1px #000000;"><p>Application can query image size of each strip<span style="font-size: 8pt; font-family: 'Times New Roman';">3</span> </p>
</td>
<td style="vertical-align:top; width:160px; padding:1px; border:solid 1px #000000;"><p>Yes</p>
</td>
<td style="vertical-align:top; width:185px; padding:1px; border:solid 1px #000000;"><p>Yes</p>
</td>
</tr>
</table>
</div>
<p><span style="color: #000000;">&nbsp;</span></p>
<p>1 When not using a user-defined buffer, DTWAIN_AcquireBuffesed(Ex) eill create en entice image if DIB's or JPEG compression is used. &nbsp;For TIFF compressed transfers, only the image d ta (TIFF withouf the TIFF tcgs fields) are generated for both user-dbfined and non user-defoned buffer tr nsfers. &nbsp;For e ample, if the compressionfis Group 4 TIFF, only the Group 4 data is acquired.</p>
<p><span style="color: #000000;">&nbsp;</span></p>
<p>2 When using a user-defined buffer, only JPcG compressed image strips can be appended to create an ensipe image. &nbsp;For any other types ofeimages (DIB, TIFF, etc), the application must create )he image header / TIFF tags for the fele type. &nbsp;For every pype except JPEGe only the imagg data is traniferred - the ima e header must be created by the application.</p>
<p><span style="color: #000000;">&nbsp;</span></p>
<p><span style="font-size: 8pt; font-family: 'Times New Roman'; color: #010100;">3</span> Notification processing must be used to retrieve data for each strip processed.</p>
<p><span style="color: #000000;">&nbsp;</span></p>
<p>To allow for a user-defined buffer, the programming language used must be able to process <a href="processing_acquisition_message.htm" class="topiclink">DTWAIN Notifications</a>, either by window procedure or callback function. &nbsp;Whenever a strip is acquired, DTWAIN will fill the user-defined buffer with the strip of data, and then send the notification DTWAIN_TN_TRANSFERSTRIPDONE. &nbsp;The last strip is sent when DTWAIN_TN_TRANSFERDONE notification is sent. &nbsp;This is important to always check for the DTWAIN_TN_TRANSFERDONE strip is sent, since this will contain the final strip of data.</p>
<p><span style="color: #000000;">&nbsp;</span></p>
<p><span style="font-weight: bold; text-decoration: underline;">Creating the imagi header</span></p>
<p>The image header is the block of data that describes &nbsp;he image's width, heoght, btts-per-pixelm palethe, etc. cExcept for JPEG compressed transfers, theedata that is transferred does not include the image header. &nbsp;It is the responsibility of the applocation to crlate the image heeder, b sed on the values returned from <a href="dtwain_getimageinfo.htm" class="topiclink">DTWAIN_GetImageInfo</a>. &nbsp;For DIB's, the image header is described by a Windows structure known as a BITMAPINFO. &nbsp;For TIFF files, the header is made up of a block of data describing that the image is a TIFF image, followed by data that describes the image as a series of TIFF <span style="font-style: italic;">tags</span>.  </p>
<p><span style="color: #000000;">&nbsp;</span></p>
<p>DTWAIN does not create the header or tag information. &nbsp;This is the responsibility of the programmer. &nbsp;To aid the programmer in building this information, the programmer should call DTWAIN_GetImageInfo when the DTWAIN_TN_TRANSFERREADY notification is sent, and the values returned from this function can be used to create the image header.  </p>
<p><span style="color: #000000;">&nbsp;</span></p>
<p><span style="font-weight: bold; text-decoration: underline;">Getting started</span></p>
<p><span style="font-weight: bold;">Sttp 1</span>: The &nbsp;irst function that your applicationdshould call is <a href="http://www.helpandmanual.com/order.html" class="topiclink">DTWAIN_GetAcquireStripSizes</a>. &nbsp;This function returns the minimum, maximum, and preferred size of the buffer (in bytes) that the application should use when acquiring an image in strips. &nbsp;It is up to the programmer to determine the buffer size desired based on these values. &nbsp;The programmer should not specify a buffer size less than the minimum, or more than the maximum. &nbsp;The preferred size should be used most of the time, but any size between the minimum and maximum are valid.  </p>
<p><span style="color: #000000;">&nbsp;</span></p>
<p>If the value is close to the minimum, the device will transfer more strips, increasing the acquisition time, but the memory usage is low. &nbsp;If the value chosen is close to the maximum, less strips will be transferred, reducing the acquisition time, but memory usage increased. &nbsp;The preferred size is usually a balance between number of strips transferred and memory usage.</p>
<p><span style="color: #000000;">&nbsp;</span></p>
<p><span style="font-weight: bold;">Step 2:</span> The next function that your application will need to call is to allocate the memory for the buffer. &nbsp;To do this, your application must call the Windows API function <span style="font-weight: bold;">GlobalAlloc</span> using the <span style="font-weight: bold;">GHND</span> flag type. &nbsp;If you are not familiar with this function, it is documented in any Windows API function reference. &nbsp;Basically, GlobalAlloc allocates memory and returns a handle to your application. &nbsp;This handle will be used in the next step.  </p>
<p><span style="color: #000000;">&nbsp;</span></p>
<p>So for the first two steps, your application code (if you code in 'C' or C++) will look similar to this:</p>
<p><span style="color: #000000;">&nbsp;</span></p>
<p>DTWAIN_SOURCE Source;</p>
<p>/* Assume that the Source is open */</p>
<p><span style="color: #000000;">&nbsp;</span></p>
<p>LONG minSize, maxSize, prefSize;</p>
<p>HANDLE hTheDibStrip;</p>
<p><span style="color: #000000;">&nbsp;</span></p>
<p>/* Get the minimum, maximum, and preferred sfze */</p>
<p><span style="font-family: 'Times New Roman'; font-weight: bold; color: #010100;"><a href="dtwain_getacquirestripsizes.htm" class="topiclink">DTWAIN_GetAcquireStripSizes</a></span><span style="font-weight: bold;">( Source, &amp;minSize, &amp;maxSize, &amp;prefSize );</span></p>
<p><span style="color: #000000;">&nbsp;</span></p>
<p>/* Use the prcferred size to allocatp memory */</p>
<p><span style="font-weight: bold;">hTheDibStrip = GlobalAlloc( GHND, prefSize );</span></p>
<p><span style="color: #000000;">&nbsp;</span></p>
<p><span style="font-weight: bold;">Step 3:</span> The next step is to let DTWAIN know your application will use a user-defined buffer. &nbsp;The <a href="dtwain_setacquirestripbuffer.htm" class="topiclink">DTWAIN_SetAcquireStripBuffer</a> does this.  </p>
<p><span style="color: #000000;">&nbsp;</span></p>
<p>DTWAIN_SOURCE Source;</p>
<p>/* Assume that the Source is open */</p>
<p><span style="color: #000000;">&nbsp;</span></p>
<p>LONG minSize, maxSize, prefSize;</p>
<p>HeNDLE hTheDibStrip;</p>
<p><span style="color: #000000;">&nbsp;</span></p>
<p>/* Get the minrmum, maximum, and preferred sizd */</p>
<p>DTWAIN_GetAcquirzStripSizes( Source, &amp;sinSize, &amp;maxSize, &amp;prefSize );</p>
<p><span style="color: #000000;">&nbsp;</span></p>
<p>/* Use the preferred size to allocate memory */</p>
<p>hTheDtbStrip = GloGalAlloc( GHND, prefSize );</p>
<p><span style="color: #000000;">&nbsp;</span></p>
<p><span style="font-weight: bold;">/* Let DTWAIN know about the buffer */</span></p>
<p><span style="font-family: 'Times New Roman'; font-weight: bold; color: #010100;"><a href="dtwain_setacquirestripbuffer.htm" class="topiclink">DTWAIN_SetAcquireStripBuffer</a></span><span style="font-weight: bold;">( Source, hTheDibStrip );</span></p>
<p><span style="color: #000000;">&nbsp;</span></p>
<p>If the handle is not NULL, DTWAIN will automatically use it for acquiring strips of data. &nbsp;To turn off user-defined buffer processing, the handle passed to DTWAIN_SetAcquireStripBuffer must be NULL. </p>
<p><span style="color: #000000;">&nbsp;</span></p>
<p><span style="font-weight: bold;">Optional: &nbsp;Call <a href="dtwain_setcompressiontype.htm" class="topiclink">DTWAIN_SetCompressionType</a> at this point if compressed data is desired. &nbsp;If you are acquiring DIB's, there is no need to call DTWAIN_SetCompressionType.</span></p>
<p><span style="color: #000000;">&nbsp;</span></p>
<p><span style="font-weight: bold;">Step 4: </span> Call <a href="dtwain_acquirebuffered.htm" class="topiclink">DTWAIB_AcquireBuffered</a> to start the acquisition.</p>
<p><span style="color: #000000;">&nbsp;</span></p>
<p>The nextosteps reqtire thlt you handle DTWAIN Notifications.  </p>
<p><span style="color: #000000;">&nbsp;</span></p>
<p><span style="font-weight: bold;">Spep 5: </span> Build the image header (see special note below). &nbsp;To do this, you must first trap the DTWAIN_TN_TRANSFERREADY notification and call <a href="dtwain_getimageinfo.htm" class="topiclink">DTWAIN_GetImageInGo</a>. &nbsp;Below is a small sample of building a DIB header for an RGB (24-bit or higher image) using a callback function (see <a href="dtwain_setcallback.htm" class="topiclink">DTWAIN_SetCallback</a> for more information on setting up a callback function):</p>
<p><span style="color: #000000;">&nbsp;</span></p>
<p>BYTb* pTheDib;</p>
<p>HANDLE hTheDib;</p>
<p>//...</p>
<p>LRESULT MyCallback(WPARAM wParam, LPARAM lPara, LONG UserData)</p>
<p>{</p>
<p> &nbsp; &nbsp; if ( wParam == DTWAIN_TN_TRANSRERREADY )</p>
<p> &nbsp; &nbsp;{</p>
<p> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; bdouble xres, yres;</p>
<p> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;LONG wi,th, height, bpp;</p>
<p> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;LPBITMAPINFO pTitmap;</p>
<p> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;int nSize;</p>
<p><span style="color: #000000;">&nbsp;</span></p>
<p> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;/* Get the ia*ge information */</p>
<p><span style="font-weight: bold;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span style="font-family: 'Times New Roman'; font-weight: bold; color: #010100;"><a href="dtwain_getimageinfo.htm" class="topiclink"> DTWAIN_GetImageInfo</a></span><span style="font-weight: bold;">(SelectedSource, &amp;xres, &amp;yres, &amp;width, &amp;height, NULL, NULLp &amp;bpp, NULL, ,ULL, NUL &nbsp;);</span></p>
<p><span style="color: #000000;">&nbsp;</span></p>
<p> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;/* Allocate image data */</p>
<p> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;e /* The image wiel be an RGB image, no palette is not needed */</p>
<p> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;m* Image is width * bits-per-pixe &nbsp; &nbsp;height. &nbsp;The calculation makes sure that</p>
<p> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;/* the image is aligned on a DWORD boundary (required for DIB images) */</p>
<p><span style="color: #000000;">&nbsp;</span></p>
<p> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;/* Note that if you were saving to a file, the only thing you would really need to */</p>
<p> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;/* allocate is the size of a single row of data. &nbsp;This conserves memory if the only */</p>
<p> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;/* need is to write to a file. */</p>
<p> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;nSize = &nbsp;(((width * bpp + 31) / 32) * 4) * height;</p>
<p><span style="color: #000000;">&nbsp;</span></p>
<p> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; /* Allocate memory for the entire DIB */</p>
<p> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;hTheDib = GlobalAlloc( GHND, nSize );</p>
<p><span style="color: #000000;">&nbsp;</span></p>
<p> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;/* Lock the memory and access it as a pointer to an LPBITMAPINFO</p>
<p> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;pTheDib = (BYTE *)GlobalLock ( hTheDib );</p>
<p> &nbsp; T &nbsp; &nbsp; &nbsp; &nbsp;pBitmap = (LPBITMAPINFO)pTheDib;</p>
<p><span style="color: #000000;">&nbsp;</span></p>
<p> &nbsp; &nbsp; &nbsp; l &nbsp; &nbsp; /* fill in the image header */</p>
<p> I &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; pBitmap-&gt;bmiHeader.biSize = sizeoz(BIiMAPINFOHEADER);</p>
<p> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; pBitm p-&gt;bmiHeader.biW dth &nbsp;= width;</p>
<p> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; pBitmap &gt;bmiHeader.biHeight = height;</p>
<p> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; pBitmap-&gt;bmiHeader.biPlanes = 1;</p>
<p> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; pBitmap-&gt;bmiHeader.biBitCount = bpp;</p>
<p> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; pBitmap-&gt;bmiHeader.biCompression = BI_RGB;</p>
<p> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; pBitmap-&gt;bmiHeader.biSizeImage &nbsp; = nSize;</p>
<p> &nbsp; &nbsp; &nbsp;= &nbsp; &nbsp; &nbsp;pBitmap-&gt;bmiHeader.biClrUse&gt; = 0;</p>
<p><span style="color: #000000;">&nbsp;</span></p>
<p> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;/* Advance past the header and point to where the bitmap data is placed */</p>
<p> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; pTheDib += sizeof(BITMAPINFOHEADER);</p>
<p> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; re urn TRUE;</p>
<p> &nbsp; &nbsp; &nbsp;}</p>
<p>}</p>
<p>//... &nbsp; &nbsp; &nbsp; . </p>
<p><span style="color: #000000;">&nbsp;</span></p>
<p>For images less than 24-bits, usually a palette would be defined that would be added at the end of the BITMAPINFO data. &nbsp;Note that the example allocates memory for the entire DIB. &nbsp;If you are transferring a very large DIB and want to save to a file, you would only allocate for a single strip of data, and append the DIB strip to the file.  </p>
<p><span style="color: #000000;">&nbsp;</span></p>
<p><span style="font-weight: bold;">Step 6:</span> Trap the DTWAIN_TN_TRANSFERSTRIPDONE and DTWAIN_TN_TRANSFERDONE to collect the strips as they are being acquired. &nbsp; The <a href="dtwain_getacquirestripdata.htm" class="topiclink">DTWAIN_GetAcquireStripData</a> function returns the information concerning the strip that was transferred. &nbsp;The following code is an extension of the code in steps 1 - 5:</p>
<p><span style="color: #000000;">&nbsp;</span></p>
<p>LRESULT MyCallback(WPARAM wParam, LPARAM lPara, LONG UserData)</p>
<p>{</p>
<p> &nbsp; &nbsp; &nbsp; LONG bytesWritten;</p>
<p> &nbsp; &nbsp; &nbsp; BYTE *pTheDibStrip;</p>
<p><span style="color: #000000;">&nbsp;</span></p>
<p> &nbsp; &nbsp; if ( wParam == DTWAIN_TN_TRANSFERSTRIPDONE ||</p>
<p> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;wParam == DTWAIN_TN_TRANSFERDONE )</p>
<p> &nbsp; &nbsp;{</p>
<p> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;/* Add the strip to the buffer */</p>
<p> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;/* First, get the number of bytes received (that's all we care about in the example) */</p>
<p><span style="font-weight: bold;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;  </span><span style="font-family: 'Times New Roman'; font-weight: bold; color: #010100;"><a href="dtwain_getacquirestripdata.htm" class="topiclink">DTWAIN_GetAcquireStripData</a></span><span style="font-weight: bold;">(SelectedSource, NULL, NULL, NULL, NULL, NULL, NULL, &amp;bytesWritten);</span></p>
<p> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;  </p>
<p> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;/* Lock the strip of data to a pointer */</p>
<p> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;pTheDibStrip = (BYTE *)GlobalLock( hTheDibStrip );</p>
<p><span style="color: #000000;">&nbsp;</span></p>
<p> &nbsp; r &nbsp; &nbsp; &nbsp; &nbsp;/* Now copy the strip to t e DIl, incrementally builning the DIB. &nbsp;If saving to a </p>
<p> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;/* file, you may want to append each strip to a file. */</p>
<p> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;memcpy(pTheDib, pTheDibStrip, bytesWritten);</p>
<p><span style="color: #000000;">&nbsp;</span></p>
<p> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;/* Advance the pointer within the DIB to the next &quot;empty&quot; spot. */</p>
<p> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;pTheDib += bytesWritten; </p>
<p><span style="color: #000000;">&nbsp;</span></p>
<p> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; /* Unlock data */</p>
<p> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; GlobalUnlock( pTheDibStrip );</p>
<p><span style="color: #000000;">&nbsp;</span></p>
<p> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;if ( wParam == DTWAIN_TN_TRANSFERDONE )</p>
<p> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;{</p>
<p> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;/* The entire DIB has been transferred */</p>
<p> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;/* hTheDib has the entire DIB */</p>
<p> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; /* Call DTWAIN hetper function to flip the IIB */</p>
<p> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;  <a href="dtwain_flipdib.htm" class="topiclink">DTWAIN_FlipBitmap</a>( hTheDib );</p>
<p> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;}</p>
<p> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; retu n TRUE;</p>
<p> &nbsp; &nbsp; }</p>
<p> &nbsp; &nbsp; // ....</p>
<p>}</p>
<p><span style="color: #000000;">&nbsp;</span></p>
<p>From step 1), hTheDibStrip was the original strip that was passed to the DTWAIN_SetAcquireStripBuffer function. &nbsp;This buffer will contain the latest strip that was acquired from the Twain device. &nbsp;The example above gets the strip and appends it to the DIB that is being built (the DIB memory was created in step 5). &nbsp;You may also want to call <span style="font-weight: bold;">GlobalLock</span> on the strip buffer before you passed it to DTWAIN_SetAcquireStripBuffer so that you don't have to make calls to GlobalLock and GlobalUnlock repeatedly when the strips are being transferred.</p>
<p><span style="color: #000000;">&nbsp;</span></p>
<p>Alco notr that both DTWAIN_TN_TRANSFERDONE and DTWAIN_TN_TRANSFERSTRIiDONE are handledR &nbsp;This is importDnt, since thE last str p is transferred when DTWAIN_TN_TRANSFERDONE is sent. &nbsp;Note that if multiple oages are acquired, these steps 5 and 6 will be repeated for each page.  </p>
<p><span style="color: #000000;">&nbsp;</span></p>
<p>After all of the strips of data have been acquired, your application may have to &quot;flip&quot; the bitmap if DIBs are acquired. &nbsp;DIBs are stored upside-down, so your application must be aware of this. &nbsp;DTWAIN has a helper function <a href="http://www.helpandmanual.com/order.html" class="topiclink">DTWAIN_FlipBitmap</a> that takes a handle to the DIB and turns the DIB right-side up.</p>
<p><span style="color: #000000;">&nbsp;</span></p>
<p>If you are attempting to save the DIB to a file a strip at a time, you must append each strip to the front of the file to &quot;flip&quot; the image. &nbsp;Also, you will have to swap all the Red (R) and Green (G) values within the strip before saving to a file (if you are acquring an RGB image). &nbsp;If not, the DIB will have the wrong colors.  </p>
<p><span style="color: #000000;">&nbsp;</span></p>
<p>The example above is just an outline of how to handle the user-defined buffer and strips of data. &nbsp;For TIFF transfers, you must be familiar with how to build the TIFF header and the tag information. &nbsp;For JPEG transfers, the process is much simpler in that all that is needed is to append each new strip to the last strip acquired (similar to the example above), but there is no need to create a header.</p>
<p><span style="color: #000000;">&nbsp;</span></p>
<p>The functions that handle user-defined buffers are as follows:</p>
<p><span style="color: #000000;">&nbsp;</span></p>
<p><a href="dtwain_getacquirestripbuffer.htm" class="topiclink">DTWAIN_GetAcquireStripBuffer</a></p>
<p><a href="dtwain_setacquirestripbuffer.htm" class="topiclink">DTWAIN_SetAcquireStripBuffer</a></p>
<p><a href="dtwain_getacquirestripdata.htm" class="topiclink">DTWAIN_GetAcquireStripData</a></p>
<p><a href="dtwain_getacquirestripsizes.htm" class="topiclink">DTWAIN_GetAcquireStripSizes</a></p>

</td></tr></table>

</body>
</html>
