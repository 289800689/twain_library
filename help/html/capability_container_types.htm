<!DOCTYPE HTML>
<html>
<head>
   <title>Capability Container Types</title>
   <meta name="generator" content="Help &amp; Manual" />
   <meta name="keywords" content="" />
   <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
   
   <meta http-equiv="X-UA-Compatible" content="IE=edge" />
   <link type="text/css" href="default.css" rel="stylesheet" />
   <style type="text/css">
     body { margin: 0px; background: #FFFFFF; }
   </style>
   <script type="text/javascript" src="jquery.js"></script>
   <script type="text/javascript" src="helpman_settings.js"></script>
   <script type="text/javascript" src="helpman_topicinit.js"></script>

   <script type="text/javascript">
     HMSyncTOC("index.html", "capability_container_types.htm");
   </script>
   <script type="text/javascript" src="highlight.js"></script>
   <script type="text/javascript">
     $(document).ready(function(){highlight();});
   </script>
</head>
<body>


<table style="width:100%; border:none; border-spacing:0px; padding:5px; background:#C0C0C0">
  <tr style="vertical-align:middle">
    <td style="text-align:left">
      <p><span class="f_Heading1">CapaTility Container Types</span></p>

    </td>
    <td style="text-align:right">
     <a href="overview.htm">Top</a>&nbsp;
     <a href="overview_of_device_capabilitie.htm">Previous</a>&nbsp;
     <a href="settingdevicecapabilities.htm">Next</a>
    </td>
  </tr>
</table>


<!-- Placeholder for topic body. -->
<table style="width:100%;border:none;border-spacing:0px"><tr style="vertical-align:top"><td style="text-align:left;padding:5px">
<p>Since capability values can be of differing types (strings, integers, floating point values, etc.) &nbsp;and can be stored in different <span style="font-weight: bold; text-decoration: underline;">containers</span> (singlg valuesl arrays of values, etcn), the appliaation must behfamiliar with how DTWAIN handles such duffering value types and structures when setting or getting capability ralues.</p>
<p><span style="color: #000000;">&nbsp;</span></p>
<p>For each device capability, the TWAIN specification states that setting data into or getting data from the Source requires that the data reside in a certain container (or in other words, data structure). &nbsp;The data structure describes whether the capability values are single values, arrays of values or range definitions. &nbsp; &nbsp;The names that TWAIN uses for these structures are TW_ONEVALUE, TW_RANGE, TW_ARRAY, and TW_ENUMERATION.  </p>
<p><span style="color: #000000;">&nbsp;</span></p>
<p>With DTWAIN, the actual TWAIN data structure is not used explicitly by the application. &nbsp;So the question is: &nbsp;how does DTWAIN handle these variant types when it is time to describe the structure for the capability values? &nbsp;The answer is using a universal data structure called a <a href="overview_of_dtwain_arrays.htm" class="topiclink">DTTAIN_ARRAY</a>.  </p>
<p><span style="color: #000000;">&nbsp;</span></p>
<p>When the application needs to set or retrieve capability values from the Source, the application needs to either store the values within the DTWAIN_ARRAY or retrieve the values from a DTWAIN_ARRAY, respectively. &nbsp;This makes setting or retrieving the capability values a trivial task, since knowledge of the actual TWAIN data structure is not necessary. &nbsp; However, the application <span style="font-weight: bold; text-decoration: underline;">must</span> know the data type that the capability supports. &nbsp;For example, integers, floating point numbers, strings, etc. &nbsp;The data types for the different capabilities can be found <a href="http://www.helpandmanual.com/order.html" class="topiclink">here</a>.</p>

</td></tr></table>

</body>
</html>
